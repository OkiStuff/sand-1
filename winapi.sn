
namespace std {

    #[target_os = "windows"]
    namespace winapi {

        // Data Types

        alias DWORD = u32;
        alias LPCSTR = const i8*;
        alias PVOID = void*;
        alias HANDLE = PVOID;
        alias HWND = HANDLE;
        alias HMENU = HANDLE;
        alias short = u8;
        alias SHORT = short;
        alias WORD = SHORT;

        alias HINSTANCE = HANDLE;
        alias LPVOID = void*;
        alias LPWORD = WORD;
        alias BOOL = int;
        alias BYTE = i8;
        alias BOOLEAN = BYTE;
        alias ATOM = WORD;

        alias char = i8;
        alias CHAR = char;
        alias CCHAR = CHAR;
        alias CONST = const;
        alias COLORREF = DWORD;
        alias DWORDLONG = u64;
        alias DWORD32 = u32;
        alias DWORD64 = u64;
        alias float = f32;
        alias FLOAT = float;

        alias HACCEL = HANDLE;
        alias HALF_PTR = int; // Half size of pointer
        alias HBITMAP = HANDLE;
        alias HBRUSH = HANDLE;
        alias HCOLORSPACE = HANDLE;
        alias HCONV = HANDLE;
        alias HCONVLIST = HANDLE;
        alias HICON = HANDLE;
        alias HCURSOR = HICON;
        alias HDC = HANDLE;
        alias HDROP = HANDLE;
        alias HDDEDATA = HANDLE;
        alias HDESK = HANDLE;
        alias HDWP = HANDLE;
        alias HENHEMTAFILE = HANDLE;
        alias HFILE = int;
        alias HFONT = HANDLE;
        alias HGDIOBJ = HANDLE;
        alias HGLOBAL = HANDLE;
        alias HHOOK = HANDLE;
        alias HINSTANCE = HANDLE;
        alias HKEY = HANDLE;
        alias HKL = HANDLE;
        alias HLOCAL = HANDLE;
        alias HMETAFILE = HANDLE;
        alias HMODULE = HINSTANCE;
        alias HMONITOR = HANDLE;
        alias HPEN = HANDLE;
        alias HRESULT = LONG;
        alias HRGN = HANDLE;
        alias HRSRC = HANDLE;
        alias HSZ = HANDLE;
        alias HWINSTA = HANDLE;

        alias INT = i32;
        alias INT_PTR = i64;
        alias INT8 = i8;
        alias INT = i32;
        alias INT64 = i64;

        alias LANGID = WORD;
        alias LCID = DWORD;
        alias LCTYPE = DWORD;
        alias LGRPID = DWORD;
        alias LONG = i32;

        alias LONG_PTR = i32*;
        alias LONG32 = i32;
        alias LONG64 = i64;
        alias LPARAM = LONG_PTR;
        alias LPBOOL = BOOL*; // BOOL far pointer;
        alias LPBYTE = BYTE*; // BYTE far pointer;
        alias LPCOLORREF = DWORD*;
        alias LPCTSTR = LPCSTR; // #else typedef LPCSTR LPCTSTR;
        alias LPCVOID = const void*;
        alias LPCWSTR = const WCHAR*;

        alias wchar_t = i16;
        alias WCHAR = wchar_t;
        alias PWCHAR = WCHAR*;
        alias VOID = void;
        alias LPDWORD = DWORD*;
        alias LPHANDLE = HANDLE*;
        alias LPINT = int*;
        alias LPLONG = long*;
        alias LPSTR = CHAR*;
        alias LPTSTR = LPWSTR; //#ifdef UNICODE
                            //   typedef LPWSTR LPTSTR;
                            //#else
                            //   typedef LPSTR LPTSTR;
                            //#endif
        alias LPVOID = void*;
        alias LPWORD = WORD*;
        alias LPWSTR = WCHAR*;
        alias LRESULT = LONG_PTR;
        alias PBOOL = BOOL*;
        alias PBOOLEAN = BOOLEN*; // BYTE NOTT FINISHED
        alias PBYTE = BYTE*; // BYTE NOT FINISHED
        alias PCHAR = CHAR*;
        alias PCSTR = const CHAR*;
        alias PCTSTR = null; //#ifdef UNICODE
                             //    typedef LPCWSTR PCTSTR;
                             //#else
                             //    typedef LPCSTR PCTSTR;
                             //#endif
        alias PCWSTR = const WCHAR*;
        alias PDWORD = DWORD*;
        alias PDWORLDLONG = DWORDLONG*;
        alias PDWORD_PTR = DWORD_PTR*;
        alias PDWORD64 = WORD64;
        alias PFLOAT = FLOAT*;
        alias PHALF_PTR = HALF_PTR*; // A pointer to HALF_PTR

        alias PHANDLE = HANDLE*;
        alias PHKEY = HKEY*;
        alias PINT = int*;
        alias PINT_PTR = INT_PTR;
        alias PINT8 = INT8*;
        alias PINT32 = i32*; //INT32
        alias PINT16 = i16*; //INT16
        alias PINT64 = INT64*;
        alias PLCID = LCID*;
        alias PLONG = LONG*;
        alias PLONGLONG = i64*; // LONGLONG

        alias PLONG_PTR = LONG_PTR*;
        alias PLONG32 = LONG32*;
        alias PLONG64 = LONG64*;
        alias POINTER_32 = i32;
        alias POINTER_64 = i64;

        // if you can read this then you are trying to figure out how the worst winapi bindings work...

        alias POINTER_SIGNED = null; // BlockFindReturn
        alias POINTER_UNSIGNED = null; // BlockFindReturn
        alias PSHORT = SHORT*;
        alias PSIZE_T = null; //SIZE_T;
        alias PSSIZE_T = null; //SSIZE_T
        alias PSTR = CHAR*;
        alias PTBYTE = null; //TBYTE
        alias PTCHAR = null; //TCHAR
        alias PTSTR = null; //#ifdef UNICODE
                            //    typedef LPWSTR PTSTR;
                            //#else typedef LPSTR PTSTR;
                            //#endif
        
        alias UCHAR = u8;
        alias PUCHAR = UCHAR; //UCHAR
        alias PUHALF_PTR = UHALF_PTR; //#ifdef _WIN64
                                 //   typedef UHALF_PTR *PUHALF_PTR;
                                 //#else
                                 //   typedef UHALF_PTR *PUHALF_PTR;
                                 //#endif

        alias UINT = u32;
        alias UINT8 = u8;
        alias UINT16 = u16;
        alias UINT64 = u64;
        alias ULONG = i32;
        alias ULONGLONG = i64;
        alias ULONG32 = u32;
        alias ULONG64 = u64;
        alias USHORT = u16;
        alias UNIT_PTR = u64;
        alias UHALF_PTR = i32; // needs review https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types#half_ptr, https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types#uhalf_ptr

        alias UNICODE_STRING = null; // needs review https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types#unicode_string

        // ReturnBlockHere

        alias PUINT = UINT*; //UNINT
        alias PUINT_PTR = UNIT_PTR*; 
        alias PUINT8 = UINT8*;
        alias PUINT16 = UINT16*;
        alias PUINT32 = UINT32*;
        alias PUINT64 = UINT64*;
        alias PULONG = ULONG*;
        alias PULONGLONG = ULONGLONG*;
        alias PULONG_PTR = ULONGLONG*;
        alias PULONG32 = ULONG32*;
        alias PULONG64 = ULONG64*;

        alias PUSHORT = USHORT*;
        alias PWORD = WORD*;
        alias PWSTR = WCHAR*;
        
        alias QWORD = u64;
        alias SC_HANDLE = HANDLE;
        alias SC_LOCK = LPVOID;

        alias SERVICE_STATUS_HANDLE = HANDLE;
        alias TBYTE = WCHAR;
        alias TCHAR = WCHAR;

        
    }
}